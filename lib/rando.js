// Generated by CoffeeScript 1.6.3
(function() {
  var ADJECTIVE, CONJUNCTION, NOUN, NUM_PATTERNS, PATTERN_MAP, Rando, VERB, createGenerator, underscore;

  underscore = require("underscore");

  ADJECTIVE = 0;

  NOUN = 1;

  VERB = 2;

  CONJUNCTION = 3;

  PATTERN_MAP = [[ADJECTIVE, NOUN, NOUN], [ADJECTIVE, ADJECTIVE, NOUN], [VERB, CONJUNCTION, ADJECTIVE, NOUN], [ADJECTIVE, ADJECTIVE, NOUN, NOUN]];

  NUM_PATTERNS = 4;

  Rando = (function() {
    var VOWELS;

    function Rando() {}

    VOWELS = ["A", "E", "I", "O", "U"];

    Rando.prototype.randomSprintName = function(bank, pattern) {
      var chosenPattern, currentWordIndex, generatedPattern, sprintName, usedWords,
        _this = this;
      sprintName = "";
      usedWords = [""];
      generatedPattern = pattern != null ? this._generatePattern(pattern) : [];
      chosenPattern = generatedPattern.length > 0 ? generatedPattern : this._randomPattern();
      currentWordIndex = 0;
      underscore.each(chosenPattern, function(type) {
        var lastWord, randomWord;
        randomWord = "";
        while (usedWords.indexOf(randomWord) > -1) {
          switch (type) {
            case ADJECTIVE:
              randomWord = _this._randomWord(bank.adjectives);
              break;
            case NOUN:
              randomWord = _this._randomWord(bank.nouns);
              break;
            case VERB:
              randomWord = _this._randomWord(bank.verbs);
              break;
            case CONJUNCTION:
              randomWord = _this._randomWord(bank.conjunctions);
              if (currentWordIndex === 0) {
                randomWord = _this._capitalizeFirstLetter(randomWord);
              }
          }
        }
        lastWord = usedWords[usedWords.length - 1];
        usedWords.push(randomWord);
        if (lastWord === "a" && _this._startsWithAVowel(randomWord)) {
          sprintName += "n";
        }
        if (currentWordIndex !== 0) {
          sprintName += " ";
        }
        sprintName += randomWord;
        return currentWordIndex++;
      });
      return sprintName;
    };

    Rando.prototype._generatePattern = function(pattern) {
      var generatedPattern, letter, letterIndex, type, uppercasePattern, _i, _ref;
      uppercasePattern = pattern.toUpperCase();
      generatedPattern = [];
      for (letterIndex = _i = 0, _ref = pattern.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; letterIndex = 0 <= _ref ? ++_i : --_i) {
        letter = uppercasePattern.charAt(letterIndex);
        type = (function() {
          switch (letter) {
            case "A":
              return ADJECTIVE;
            case "N":
              return NOUN;
            case "V":
              return VERB;
            case "C":
              return CONJUNCTION;
          }
        })();
        if (type != null) {
          generatedPattern.push(type);
        }
      }
      console.log("Got pattern: ", generatedPattern);
      return generatedPattern;
    };

    Rando.prototype._randomPattern = function() {
      var randomInt;
      randomInt = this._randomInt(0, NUM_PATTERNS - 1);
      return PATTERN_MAP[randomInt];
    };

    Rando.prototype._randomInt = function(min, max) {
      return Math.floor(Math.random() * (max - min + 1)) + min;
    };

    Rando.prototype._randomWord = function(wordList) {
      return wordList[this._randomInt(0, wordList.length - 1)];
    };

    Rando.prototype._capitalizeFirstLetter = function(word) {
      return word.charAt(0).toUpperCase() + word.slice(1);
    };

    Rando.prototype._startsWithAVowel = function(word) {
      var firstCharacter;
      firstCharacter = word.charAt(0);
      return ["A", "E", "I", "O", "U"].indexOf(firstCharacter) > -1;
    };

    return Rando;

  })();

  createGenerator = function() {
    return new Rando();
  };

  module.exports = createGenerator;

}).call(this);
